openapi: 3.0.1
info:
  title: Danish Data Portal - HPC API
  description: A Web API for HPC centers to communicate with the Danish Data Portal
    to manage access and data transfers
  version: v1
servers:
- url: /
security:
- ApiKey: []
paths:
  /data/{fileId}:
    get:
      tags:
      - Data
      summary: Fetches a specified file for download
      parameters:
      - name: fileId
        in: path
        description: Id (GUID) of the file to be fetched
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: Returns a filestream of the file for download
          content:
            text/plain:
              schema:
                type: string
                format: binary
                x-content-type: text/plain
            application/json:
              schema:
                type: string
                format: binary
            text/json:
              schema:
                type: string
                format: binary
        "401":
          description: Unauthorized - wrong or missing API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        "403":
          description: HPC center not authorized to fetch this file
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        "404":
          description: The file does not exist
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
    post:
      tags:
      - Data
      summary: Returns a requested file to the Danish Data Portal
      parameters:
      - name: fileId
        in: path
        description: Id (GUID) of the file being uploaded
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/data_fileId_body'
            encoding:
              DataFile:
                style: form
      responses:
        "200":
          description: File returned succesfully
        "401":
          description: Unauthorized - wrong or missing API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        "403":
          description: HPC center not authorized to return this file
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        "404":
          description: A file with the given fileId does not exist
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  /data/project/{projectNo}:
    post:
      tags:
      - Data
      summary: Transfers a file to the researchers work area in Statistics Denmark
      parameters:
      - name: projectNo
        in: path
        description: The project number the file should be transfered to
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/project_projectNo_body'
            encoding:
              DataFile:
                style: form
      responses:
        "200":
          description: File transfered succesfully
        "401":
          description: Unauthorized - wrong or missing API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        "403":
          description: HPC center not authorized to transfer files to this project
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  /messages:
    get:
      tags:
      - Messages
      summary: Fetches all unprocessed messages adressed to the caller
      description: "The data field relates to the messageType and is a JSON string\
        \ with the relevant data. Below the data field is described for each messageType.\r\
        \n            \r\nmessageType = CreateProject:\r\n            \r\n    {\r\n\
        \       \"ProjectNo\": \"712456\",\r\n    }\r\n            \r\nmessageType\
        \ = DeleteProject:\r\n            \r\n    {\r\n       \"ProjectNo\": \"712456\"\
        ,\r\n    }\r\n            \r\nmessageType = CreateProjectAccess:\r\n     \
        \       \r\n    {\r\n       \"ProjectNo\": \"712456\",\r\n       \"AccessIdentifier\"\
        : \"3cb99f77-5c83-41fa-ac15-06f90890c66e\",\r\n    }\r\n            \r\nmessageType\
        \ = DeleteProjectAccess:\r\n            \r\n    {\r\n       \"AccessIdentifier\"\
        : \"3cb99f77-5c83-41fa-ac15-06f90890c66e\"\r\n    }\r\n            \r\nmessageType\
        \ = DisableProjectAccess:\r\n            \r\n    {\r\n       \"AccessIdentifier\"\
        : \"3cb99f77-5c83-41fa-ac15-06f90890c66e\"\r\n    }\r\n            \r\nmessageType\
        \ = EnableProjectAccess:\r\n            \r\n    {\r\n       \"AccessIdentifier\"\
        : \"3cb99f77-5c83-41fa-ac15-06f90890c66e\"\r\n    }\r\n            \r\nmessageType\
        \ = ResetPassword:\r\n            \r\n    {\r\n       \"AccessIdentifier\"\
        : \"3cb99f77-5c83-41fa-ac15-06f90890c66e\"\r\n    }\r\n            \r\nmessageType\
        \ = DataDeliveryReady:\r\n            \r\n    {\r\n       \"DataDeliveryId\"\
        :\"2cb99f77-5c83-41fa-ac15-06f90890c66e\",\r\n       \"ProjectNumber\":712456,\r\
        \n       \"Files\": [\r\n          {\r\n              \"FileId\":\"fa5a6bff-2d35-40e4-86d9-e90945732720\"\
        ,\r\n              \"FileSize\":22,\r\n              \"FileChecksum\":\"5f7948af5e9db4fc545b49a09f3c37d1\"\
        \r\n          }\r\n       ]\r\n    }\r\n            \r\nmessageType = DeleteDataFile:\r\
        \n            \r\n    {\r\n       \"FileId\":\"fa5a6bff-2d35-40e4-86d9-e90945732720\"\
        \r\n    }\r\n            \r\n            \r\nmessageType = ReturnDataFile:\r\
        \n            \r\n    {\r\n       \"FileId\":\"fa5a6bff-2d35-40e4-86d9-e90945732720\"\
        \r\n    }"
      responses:
        "200":
          description: Returns a list of messages
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MessageDTO'
                x-content-type: text/plain
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MessageDTO'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MessageDTO'
        "401":
          description: Unauthorized - wrong or missing API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
    patch:
      tags:
      - Messages
      summary: Marks all specified messages as processed.
      requestBody:
        description: List of GUIDs of messages to mark as processed
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                type: string
                format: uuid
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uuid
          text/json:
            schema:
              type: array
              items:
                type: string
                format: uuid
          application/*+json:
            schema:
              type: array
              items:
                type: string
                format: uuid
      responses:
        "200":
          description: Messages marked as processed
        "400":
          description: One or more message was already marked as processed
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        "401":
          description: Unauthorized - wrong or missing API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        "403":
          description: One or more message does not belong to the calling HPC center
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        "404":
          description: One or more message does not exist
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  /messages/{id}:
    patch:
      tags:
      - Messages
      summary: Marks a specified message as processed.
      parameters:
      - name: id
        in: path
        description: Id of the message to mark as processed
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: Message marked as processed
        "400":
          description: The message was already marked as processed
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        "401":
          description: Unauthorized - wrong or missing API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        "403":
          description: The message does not belong to the calling HPC center
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        "404":
          description: The message does not exist
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  /projects/{projectNo}/confirm:
    post:
      tags:
      - Projects
      summary: Used to tell the Danish Data Portal that the indicated project number
        is confirmed for creation.
      description: "When the reasearcher and the HPC center has formalised a contract\
        \ and financial details are in order,\r\nthis endpoint should be used to tell\
        \ the Danish data Portal that the project is approved for creation.\r\nThis\
        \ does not mean that the project is created right away, but simply that the\
        \ formalities on the side of\r\nthe HPC center is in order. If the formalities\
        \ also are in order between the Danish Data Portal and the\r\ninstitution,\
        \ the researcher can choose to create a project at the approved HPC center."
      parameters:
      - name: projectNo
        in: path
        description: Project number
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Projected confirmed
        "400":
          description: Projected was already confirmed previously
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        "401":
          description: Unauthorized - wrong or missing API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        "404":
          description: Project number does not exist
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  /test/synchronize:
    post:
      tags:
      - Test
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: integer
              format: int32
          application/json:
            schema:
              type: integer
              format: int32
          text/json:
            schema:
              type: integer
              format: int32
          application/*+json:
            schema:
              type: integer
              format: int32
      responses:
        "200":
          description: Success
        "401":
          description: Unauthorized - wrong or missing API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  /test/mark-delivery-ready:
    post:
      tags:
      - Test
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: string
              format: uuid
          application/json:
            schema:
              type: string
              format: uuid
          text/json:
            schema:
              type: string
              format: uuid
          application/*+json:
            schema:
              type: string
              format: uuid
      responses:
        "200":
          description: Success
        "401":
          description: Unauthorized - wrong or missing API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  /test/recall-delivery:
    post:
      tags:
      - Test
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: string
              format: uuid
          application/json:
            schema:
              type: string
              format: uuid
          text/json:
            schema:
              type: string
              format: uuid
          application/*+json:
            schema:
              type: string
              format: uuid
      responses:
        "200":
          description: Success
        "401":
          description: Unauthorized - wrong or missing API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  /test/move-received-transfer-file:
    post:
      tags:
      - Test
      parameters:
      - name: filename
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: projectNo
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Success
        "401":
          description: Unauthorized - wrong or missing API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  /user-accesses:
    post:
      tags:
      - UserAccesses
      summary: Used to confirm the creation of a user access providing the login name
        and password to DDP.
      requestBody:
        description: "AccessIdentifer, login name and one time password of the user\
          \ access"
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UserAccessCreatedDTO'
          application/json:
            schema:
              $ref: '#/components/schemas/UserAccessCreatedDTO'
          text/json:
            schema:
              $ref: '#/components/schemas/UserAccessCreatedDTO'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UserAccessCreatedDTO'
      responses:
        "200":
          description: User access creation confirmed
        "401":
          description: Unauthorized - wrong or missing API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  /user-accesses/{accessIdentifier}:
    patch:
      tags:
      - UserAccesses
      summary: Used to confirm password reset of a user access providing the new one
        time password.
      parameters:
      - name: accessIdentifier
        in: path
        description: Id of the user access
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
      requestBody:
        description: One-time password
        content:
          application/json-patch+json:
            schema:
              type: string
          application/json:
            schema:
              type: string
          text/json:
            schema:
              type: string
          application/*+json:
            schema:
              type: string
      responses:
        "200":
          description: Success
        "401":
          description: Unauthorized - wrong or missing API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
components:
  schemas:
    ErrorDetails:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
        message:
          type: string
          nullable: true
      additionalProperties: false
    HPCMessageTypeEnum:
      type: string
      enum:
      - CreateProject
      - DeleteProject
      - CreateProjectAccess
      - DeleteProjectAccess
      - DisableProjectAccess
      - EnableProjectAccess
      - ResetPassword
      - DataDeliveryReady
      - DeleteDataFile
      - ReturnDataFile
    MessageDTO:
      type: object
      properties:
        messageId:
          type: string
          format: uuid
        messageType:
          $ref: '#/components/schemas/HPCMessageTypeEnum'
        timestamp:
          type: string
          format: date-time
        data:
          type: string
          nullable: true
      additionalProperties: false
      example:
        messageType: CreateProject
        data: data
        messageId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        timestamp: 2000-01-23T04:56:07.000+00:00
    UserAccessCreatedDTO:
      type: object
      properties:
        accessIdentifier:
          type: string
          format: uuid
        loginName:
          type: string
          nullable: true
        oneTimePassword:
          type: string
          nullable: true
      additionalProperties: false
    data_fileId_body:
      type: object
      properties:
        DataFile:
          type: string
          format: binary
    project_projectNo_body:
      type: object
      properties:
        DataFile:
          type: string
          format: binary
  securitySchemes:
    ApiKey:
      type: apiKey
      description: "API key needed to access the endpoints. Example: 'ApiKey: YOUR_API_KEY'"
      name: X-API-Key
      in: header
